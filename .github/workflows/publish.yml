name: Build/Publish Docker Images
on: 
  push:
    tags: 
      - v*
  pull_request:

env:
  REGISTRY: ghcr.io

jobs:
  build-and-publish-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      actions: read
      id-token: write
    strategy:
      matrix:
        image: [dnf]
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Cosign Install
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: 'v2.0.0-rc.0'

      - name: Set up container metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images:
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/mariner-${{ matrix.image }}
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=pr

      - name: Authenticate to registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Build/Push Container
        id: build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile.${{ matrix.image }}
          platforms: linux/amd64, linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Sign container image
        if: ${{ github.event_name != 'pull_request' }}
        env: 
          COSIGN_EXPERIMENTAL: "true"
        run: |
          cosign sign ${{ steps.build.outputs.image }}@${{ steps.build.outputs.digest }}

